(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{514:function(v,_,e){"use strict";e.r(_);var a=e(45),o=Object(a.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"缓存策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存策略"}},[v._v("#")]),v._v(" 缓存策略")]),v._v(" "),e("p",[v._v("缓存是性能优化中非常重要的一环，浏览器的缓存对开发也是非常重要的知识点。")]),v._v(" "),e("h2",{attrs:{id:"强缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[v._v("#")]),v._v(" 强缓存")]),v._v(" "),e("p",[v._v("浏览器的缓存作用分为两种情况，一种是需要发送"),e("code",[v._v("HTTP")]),v._v("请求，一种是不需要发送。")]),v._v(" "),e("p",[v._v("首先是检测强缓存，这个阶段不需要发送"),e("code",[v._v("HTTP")]),v._v("请求。")]),v._v(" "),e("p",[v._v("在"),e("code",[v._v("HTTP/1")]),v._v("和"),e("code",[v._v("HTTP/1.1")]),v._v("当中，这个字段是不一样的。在早起，也就是"),e("code",[v._v("HTTP/1")]),v._v("时期，使用的是"),e("code",[v._v("Expires")]),v._v("，而"),e("code",[v._v("HTTP/1.1")]),v._v("时期，使用的是"),e("code",[v._v("Cache-Control")])]),v._v(" "),e("p",[e("strong",[v._v("Expires")])]),v._v(" "),e("p",[e("code",[v._v("Expires")]),v._v("即过期时间，存在于服务端返回的响应头中，告诉浏览器在这个过期时间之前可以直接从缓存里面获取数据，无需再次请求。")]),v._v(" "),e("p",[v._v("格式如下：")]),v._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[v._v("\nExpires: Wed, "),e("span",{pre:!0,attrs:{class:"token number"}},[v._v("22")]),v._v(" Nov "),e("span",{pre:!0,attrs:{class:"token number"}},[v._v("2019")]),v._v(" 08:41:00 GMT\n\n")])])]),e("p",[v._v("表示资源在"),e("em",[v._v("2019年10月22号8点41分0秒")]),v._v("过期，过期了就得向服务器发送请求。")]),v._v(" "),e("p",[v._v("这种方式可能存在的问题：服务器的时间和浏览器的时间可能不一致，那服务器返回的这个过期时间的计算可能就不准确。因此这种方式后来就被抛弃了。")]),v._v(" "),e("p",[e("strong",[v._v("Cache-Control")])]),v._v(" "),e("p",[v._v("在"),e("code",[v._v("HTTP/1.1")]),v._v("中，采用了"),e("code",[v._v("Cache-Control")]),v._v("。它和"),e("code",[v._v("Expires")]),v._v("本质的区别在于：它没有采用"),e("em",[v._v("具体过期时间")]),v._v("这个方式，而是采用了"),e("em",[v._v("过期时长")]),v._v("来控制缓存，对应的字段是"),e("code",[v._v("max-age")]),v._v("。")]),v._v(" "),e("p",[v._v("格式如下：")]),v._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[v._v("\nCache-Control: max-age "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[v._v("3600")]),v._v("\n\n")])])]),e("p",[v._v("代表这个响应放回后在3600秒（1小时内）可以直接使用缓存。")]),v._v(" "),e("p",[v._v("除了"),e("code",[v._v("max-age")]),v._v("，它还有很多参数，用来完成更多缓存场景的判断。如下：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("public")]),v._v("：客户端和代理服务器都可以缓存。因为一个请求可能要经过多个"),e("em",[v._v("代理服务器")]),v._v("最后才能到达目标服务器，那么结果就是不仅浏览器可以缓存数据，中间的任何代理节点都可以进行缓存。")]),v._v(" "),e("li",[e("code",[v._v("private")]),v._v("：只有浏览器可以缓存，中间的代理服务器不可以缓存。")]),v._v(" "),e("li",[e("code",[v._v("no-cache")]),v._v("：跳过当前的强缓存，发送HTTP请求，即直接进入"),e("em",[v._v("协商缓存")]),v._v("阶段。")]),v._v(" "),e("li",[e("code",[v._v("no-store")]),v._v("：不进行任何形式的缓存。")]),v._v(" "),e("li",[e("code",[v._v("s-maxage")]),v._v("：和"),e("code",[v._v("max-age")]),v._v("有点像，不同在于它是针对代理服务器的缓存时间。")])]),v._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[v._v("注意")]),v._v(" "),e("p",[v._v("当 "),e("code",[v._v("Expires")]),v._v("和"),e("code",[v._v("Cache-Control")]),v._v("同时存在的时候，"),e("code",[v._v("Cache-Control")]),v._v("会被优先考虑")])]),v._v(" "),e("p",[v._v("还有一种情况，当资源缓存超时，也就是强缓存失效了，那么接下来就进入了第二道屏障——协商缓存了。")]),v._v(" "),e("h2",{attrs:{id:"协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[v._v("#")]),v._v(" 协商缓存")]),v._v(" "),e("p",[v._v("强缓存失效后，浏览器在请求头中携带缓存tag向服务器发送发送HTTP请求，由服务器根据这个tag来决定是否使用缓存，这就是"),e("strong",[v._v("协商缓存")]),v._v("。")]),v._v(" "),e("p",[v._v("具体来说，这样的缓存tag分为两种："),e("code",[v._v("Last-Modified")]),v._v("和"),e("code",[v._v("ETag")]),v._v("。这两者各有优劣，并不存在谁对谁有绝对的优势。")]),v._v(" "),e("p",[e("strong",[v._v("Last-Modified")])]),v._v(" "),e("p",[v._v("即最后修改时间。在浏览器第一次给服务器发送请求后，服务器会在响应头中加上这个字段。")]),v._v(" "),e("p",[v._v("浏览器收到后，如果再次请求，会在请求中的携带"),e("code",[v._v("If-Modified-Since")]),v._v("字段，这个字段的值也就是服务器传来的最后修改时间。")]),v._v(" "),e("p",[v._v("服务器拿到请求头中的"),e("code",[v._v("If-Modified-Since")]),v._v("字段后，会和服务器中该资源"),e("em",[v._v("最后修改时间")]),v._v("作对比：")]),v._v(" "),e("ul",[e("li",[v._v("如果请求头中的值小于最后修改时间，说明是时候更新了。则返回新的资源，更常规HTTP请求响应的流程一样。")]),v._v(" "),e("li",[v._v("否则返回304，告诉浏览器直接用缓存。")])]),v._v(" "),e("p",[e("strong",[v._v("ETag")])]),v._v(" "),e("p",[e("code",[v._v("ETag")]),v._v("是服务器根据当前文件的内容，给文件生成的唯一标识，只要里面的内容有改动，这个值就会变。服务器通过响应头将这个值传递给浏览器。")]),v._v(" "),e("p",[v._v("浏览器接收到"),e("code",[v._v("ETag")]),v._v("的值，会在下次请求的时候，将这个值作为"),e("code",[v._v("If-None-Match")]),v._v("这个字段的内容，并放在请求头中，然后发送给服务器。")]),v._v(" "),e("p",[v._v("服务器接收到"),e("code",[v._v("If-None-Match")]),v._v("这个字段后，会跟服务器上该资源的"),e("code",[v._v("ETag")]),v._v("做对比：")]),v._v(" "),e("ul",[e("li",[v._v("如果两者不一样，说明要更新了。返回新的资源，更常规HTTP请求响应的流程一样。")]),v._v(" "),e("li",[v._v("否则返回304，告诉浏览器直接用缓存。")])]),v._v(" "),e("p",[e("strong",[v._v("两者对比")])]),v._v(" "),e("ul",[e("li",[v._v("在精准度上，"),e("code",[v._v("ETag")]),v._v("优于"),e("code",[v._v("Last-Modified")]),v._v("。由于"),e("code",[v._v("ETag")]),v._v("是按照内容给资源加标识，因此能准确感知资源的变化。而"),e("code",[v._v("Last-Modified")]),v._v("不一样，它在一些特殊情况并不能准确感应资源的变化，主要有以下两种情况：\n"),e("ul",[e("li",[v._v("编辑了资源文件，但文件内容并没有修改，这样也会造成缓存失效。")]),v._v(" "),e("li",[e("code",[v._v("Last-Modified")]),v._v("能够感知的时间单位是秒，如果文件在1秒内改变多次，这个时候"),e("code",[v._v("Last-Modified")]),v._v("并没有体现出修改了。")])])]),v._v(" "),e("li",[v._v("在性能上，"),e("code",[v._v("Last-Modified")]),v._v("优于"),e("code",[v._v("ETag")]),v._v("。由于"),e("code",[v._v("Last-Modified")]),v._v("仅仅是记录一个时间点，而"),e("code",[v._v("ETag")]),v._v("要根据文件的内容生成哈希值。")])]),v._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[v._v("注意：")]),v._v(" "),e("p",[v._v("如果两种方式都支持的话，服务器会优先考虑"),e("code",[v._v("ETag")])])]),v._v(" "),e("h2",{attrs:{id:"缓存位置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存位置"}},[v._v("#")]),v._v(" 缓存位置")]),v._v(" "),e("p",[v._v("当强缓存命中或者协商缓存中服务器返回304的时候，我们直接从缓存中获取资源。那么这些资源究竟缓存在什么位置呢？")]),v._v(" "),e("p",[v._v("浏览器中的缓存位置一共有四中，按照优先级从高到低排列依次是：")]),v._v(" "),e("ul",[e("li",[v._v("Service Worker")]),v._v(" "),e("li",[v._v("Memory Cache")]),v._v(" "),e("li",[v._v("Disk Cache")]),v._v(" "),e("li",[v._v("Push Cache")])]),v._v(" "),e("p",[e("strong",[v._v("Service Worker")])]),v._v(" "),e("p",[e("code",[v._v("Service Worker")]),v._v("借鉴了"),e("code",[v._v("Web Worker")]),v._v("的思路，即让JS运行在主线程之外，由于它脱离了浏览器的窗体，因此无法直接访问DOM。虽然如此，但它仍然能帮助我们完成很多有用的功能，比如"),e("em",[v._v("离线缓存")]),v._v("、"),e("em",[v._v("消息推送")]),v._v("和"),e("em",[v._v("网络代理")]),v._v("等功能。其中的离线缓存就是"),e("code",[v._v("Service Worker Cache")]),v._v("。")]),v._v(" "),e("p",[e("code",[v._v("Service Worker")]),v._v("同时也是PWA的重要实现机制.")]),v._v(" "),e("p",[e("strong",[v._v("Memory Cache")])]),v._v(" "),e("p",[e("code",[v._v("Memory Cache")]),v._v("指的是内存缓存，从效率上讲它是最快的。但是从存活时间来讲又是最短的，当渲染进程结束后，内存缓存也就不存在了。")]),v._v(" "),e("p",[e("strong",[v._v("Disk Cache")])]),v._v(" "),e("p",[e("code",[v._v("Disk Cache")]),v._v("就是存储在磁盘中的缓存，从存取效率上讲是比内存缓存慢的，但是他的优势在于存储容量和存储时长。")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("浏览器如何决定资源放在内存还是磁盘里呢？")]),v._v(" "),e("ul",[e("li",[v._v("比较大的"),e("code",[v._v("js/css")]),v._v("文件会被直接丢进磁盘，反之丢进内存")]),v._v(" "),e("li",[v._v("内存使用率比较高的时候，文件优先进入磁盘")])])]),v._v(" "),e("p",[e("strong",[v._v("Push Cache")])]),v._v(" "),e("p",[v._v("即推送缓存，这是浏览器缓存的最后一道防线。它是"),e("code",[v._v("HTTP/2")]),v._v("中的内容，虽然现在应用的并不广泛，但随着"),e("code",[v._v("HTTP/2")]),v._v("的推广，它的应用越来越广泛。关于"),e("code",[v._v("Push Cache")]),v._v("，有非常多的内容可以挖掘。")]),v._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),e("p",[v._v("首先通过"),e("code",[v._v("Cache-Control")]),v._v("验证强缓存是否可以用")]),v._v(" "),e("ul",[e("li",[v._v("如果强缓存可用，直接使用")]),v._v(" "),e("li",[v._v("否则进入协商缓存，即发送HTTP请求，服务器通过请求头中的"),e("code",[v._v("If-Modified-Since")]),v._v("或者"),e("code",[v._v("If-None-Match")]),v._v("字段检验资源是否更新：\n"),e("ul",[e("li",[v._v("若资源更新，则返回资源和200状态码")]),v._v(" "),e("li",[v._v("若资源没有更新，返回304，告诉浏览器直接从缓存获取资源")])])])]),v._v(" "),e("blockquote",[e("p",[v._v("参考文档："),e("a",{attrs:{href:"https://juejin.cn/post/6844904021308735502",target:"_blank",rel:"noopener noreferrer"}},[v._v("浏览器灵魂之问"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=o.exports}}]);